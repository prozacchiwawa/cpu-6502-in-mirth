import base/io
import base/str
import cpu6502
import cpu6502/flags
import r8
import r16
import lines
import makeram
import ram
import cpusinglestep

export cputests
end

testResetProg : M6502 M6502Effect Ram
testResetProg = emptyM6502 noEff emptyRam untilBRK

afterTestResetProgCPU : M6502
afterTestResetProgCPU = testResetProg drop drop
afterTestResetProgCPU == 0 v16 v8zero v8zero v8zero 0xff v8 emptyFlags fetch m6502

# Test that JSR and RTS are symmetric
testJSRRTSProg : Ram
testJSRRTSProg = ↴(
  emptyRam
  0x0000 0x20 v8 rotl byte_to_ram
  0x0001 0x08 v8 rotl byte_to_ram
  0x0002 0x00 v8 rotl byte_to_ram
  0x0008 0x60 v8 rotl byte_to_ram
  )

0 0x20 testJSRRTSProg showRange print == id
0xfffa 6 testJSRRTSProg showRange print == id

testRunJSRRTSProg : M6502 M6502Effect Ram
testRunJSRRTSProg = emptyM6502 noEff testJSRRTSProg untilBRK

afterTestJSRRTSProgRam : Ram
afterTestJSRRTSProgRam = testRunJSRRTSProg dip(drop drop)

afterTestJSRRTSProgCPU : M6502
afterTestJSRRTSProgCPU = testRunJSRRTSProg drop drop

afterTestJSRRTSProgCPU == 3 v16 v8zero v8zero v8zero 0xff v8 emptyFlags fetch m6502

0x1ff afterTestJSRRTSProgRam byte_of_ram == 0x00 v8
0x1fe afterTestJSRRTSProgRam byte_of_ram == 0x02 v8

# Test that ADC works correctly
testADCProg1 : Ram
testADCProg1 = ↴(
  emptyRam
  0x0000 0x18 v8 rotl byte_to_ram
  0x0001 0xa9 v8 rotl byte_to_ram
  0x0002 0x01 v8 rotl byte_to_ram
  0x0003 0x69 v8 rotl byte_to_ram
  0x0004 0x01 v8 rotl byte_to_ram
  )

# adcSteps : M6502 M6502Effect Ram +IO
# adcSteps = emptyM6502 noEff testADCProg1 10 runSteps

adcSteps drop drop drop == id

afterTestADCProg1 : M6502 M6502Effect Ram
afterTestADCProg1 = emptyM6502 noEff testADCProg1 untilBRK
afterTestADCProg1 drop drop == 5 v16 2 v8 v8zero v8zero 0xff v8 emptyFlags fetch m6502
